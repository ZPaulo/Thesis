#include <stdio.h>                  // printf();
#include <stdlib.h>                 // for malloc();
#include <stdbool.h>                // for bool type variables!
#include <math.h>                   // for sin,cos,pow... compile with -lm
#include "CellFunctions.h" // convenience

void MRTInitializer2D(FLOAT_TYPE* velMomMap2D, FLOAT_TYPE* momCollMtx2D, FLOAT_TYPE omega)
{
  int i, j;  // loop variables

  FLOAT_TYPE sm[9];
  const FLOAT_TYPE a1=1./36.;

  //this is M^-1
  FLOAT_TYPE tminv[81]=
     {4.*a1, -4.*a1,  4.*a1,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
      4.*a1,    -a1, -2.*a1,  6.*a1, -6.*a1,    0.0,    0.0,  9.*a1,    0.0,
      4.*a1,    -a1, -2.*a1,    0.0,    0.0,  6.*a1, -6.*a1, -9.*a1,    0.0,
      4.*a1,    -a1, -2.*a1, -6.*a1,  6.*a1,    0.0,    0.0,  9.*a1,    0.0,
      4.*a1,    -a1, -2.*a1,    0.0,    0.0, -6.*a1,  6.*a1, -9.*a1,    0.0,
      4.*a1,  2.*a1,     a1,  6.*a1,  3.*a1,  6.*a1,  3.*a1,    0.0,  9.*a1,
      4.*a1,  2.*a1,     a1, -6.*a1, -3.*a1,  6.*a1,  3.*a1,    0.0, -9.*a1,
      4.*a1,  2.*a1,     a1, -6.*a1, -3.*a1, -6.*a1, -3.*a1,    0.0,  9.*a1,
      4.*a1,  2.*a1,     a1,  6.*a1,  3.*a1, -6.*a1, -3.*a1,    0.0, -9.*a1};

  //this is M
  FLOAT_TYPE temp[81] =
   {1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
    -4.,-1.,-1.,-1.,-1.,2.0,2.0,2.0,2.0,
    4.0,-2.,-2.,-2.,-2.,1.0,1.0,1.0,1.0,
    0.0,1.0,0.0,-1.,0.0,1.0,-1.,-1.,1.0,
    0.0,-2.,0.0,2.0,0.0,1.0,-1.,-1.,1.0,
    0.0,0.0,1.0,0.0,-1.,1.0,1.0,-1.,-1.,
    0.0,0.0,-2.,0.0,2.0,1.0,1.0,-1.,-1.,
    0.0,1.0,-1.,1.0,-1.,0.0,0.0,0.0,0.0,
    0.0,0.0,0.0,0.0,0.0,1.0,-1.,1.0,-1.};

  for (i = 0; i < 81; i++)
  {
      velMomMap2D[i] = temp[i];
  }

  //This is diag(S)
  sm[0] = 1.0;
  sm[1] = 1.4;
  sm[2] = 1.4;
  sm[3] = 1.0;
  sm[4] = 1.2;
  sm[5] = 1.0;
  sm[6] = 1.2;
  sm[7] = omega;
  sm[8] = omega;


  for(i=0;i<9;i++)
  {
    for(j=0;j<9;j++)
    {
        momCollMtx2D[i*9+j]=tminv[i*9+j]*sm[j];
    }
  }

}

void MRTInitializer3D(FLOAT_TYPE* velMomMap3D, FLOAT_TYPE* momCollMtx3D, FLOAT_TYPE omega)
{
  int i, j;  // loop variables

  FLOAT_TYPE sm[19];
  const FLOAT_TYPE a1= 1./47880.;

  //this is M^-1
  FLOAT_TYPE tminv[361]=
     {2520.*a1,-600.*a1,2280.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,
		 2520.*a1,-220.*a1,-760.*a1,4788.*a1,-4788.*a1,0.*a1,0.*a1,0.*a1,0.*a1,2660.*a1,-2660.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,
		 2520.*a1,-220.*a1,-760.*a1,-4788.*a1,4788.*a1,0.*a1,0.*a1,0.*a1,0.*a1,2660.*a1,-2660.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,
		 2520.*a1,-220.*a1,-760.*a1,0.*a1,0.*a1,4788.*a1,-4788.*a1,0.*a1,0.*a1,-1330.*a1,1330.*a1,3990.*a1,-3990.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,
		 2520.*a1,-220.*a1,-760.*a1,0.*a1,0.*a1,-4788.*a1,4788.*a1,0.*a1,0.*a1,-1330.*a1,1330.*a1,3990.*a1,-3990.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,
		 2520.*a1,-220.*a1,-760.*a1,0.*a1,0.*a1,0.*a1,0.*a1,4788.*a1,-4788.*a1,-1330.*a1,1330.*a1,-3990.*a1,3990.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,
		 2520.*a1,-220.*a1,-760.*a1,0.*a1,0.*a1,0.*a1,0.*a1,-4788.*a1,4788.*a1,-1330.*a1,1330.*a1,-3990.*a1,3990.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,0.*a1,
		 2520.*a1,160.*a1,190.*a1,4788.*a1,1197.*a1,4788.*a1,1197.*a1,0.*a1,0.*a1,1330.*a1,665.*a1,3990.*a1,1995.*a1,11970.*a1,0.*a1,0.*a1,5985.*a1,-5985.*a1,0.*a1,
		 2520.*a1,160.*a1,190.*a1,-4788.*a1,-1197.*a1,4788.*a1,1197.*a1,0.*a1,0.*a1,1330.*a1,665.*a1,3990.*a1,1995.*a1,-11970.*a1,0.*a1,0.*a1,-5985.*a1,-5985.*a1,0.*a1,
		 2520.*a1,160.*a1,190.*a1,4788.*a1,1197.*a1,-4788.*a1,-1197.*a1,0.*a1,0.*a1,1330.*a1,665.*a1,3990.*a1,1995.*a1,-11970.*a1,0.*a1,0.*a1,5985.*a1,5985.*a1,0.*a1,
		 2520.*a1,160.*a1,190.*a1,-4788.*a1,-1197.*a1,-4788.*a1,-1197.*a1,0.*a1,0.*a1,1330.*a1,665.*a1,3990.*a1,1995.*a1,11970.*a1,0.*a1,0.*a1,-5985.*a1,5985.*a1,0.*a1,
		 2520.*a1,160.*a1,190.*a1,4788.*a1,1197.*a1,0.*a1,0.*a1,4788.*a1,1197.*a1,1330.*a1,665.*a1,-3990.*a1,-1995.*a1,0.*a1,0.*a1,11970.*a1,-5985.*a1,0.*a1,5985.*a1,
		 2520.*a1,160.*a1,190.*a1,-4788.*a1,-1197.*a1,0.*a1,0.*a1,4788.*a1,1197.*a1,1330.*a1,665.*a1,-3990.*a1,-1995.*a1,0.*a1,0.*a1,-11970.*a1,5985.*a1,0.*a1,5985.*a1,
		 2520.*a1,160.*a1,190.*a1,4788.*a1,1197.*a1,0.*a1,0.*a1,-4788.*a1,-1197.*a1,1330.*a1,665.*a1,-3990.*a1,-1995.*a1,0.*a1,0.*a1,-11970.*a1,-5985.*a1,0.*a1,-5985.*a1,
		 2520.*a1,160.*a1,190.*a1,-4788.*a1,-1197.*a1,0.*a1,0.*a1,-4788.*a1,-1197.*a1,1330.*a1,665.*a1,-3990.*a1,-1995.*a1,0.*a1,0.*a1,11970.*a1,5985.*a1,0.*a1,-5985.*a1,
		 2520.*a1,160.*a1,190.*a1,0.*a1,0.*a1,4788.*a1,1197.*a1,4788.*a1,1197.*a1,-2660.*a1,-1330.*a1,0.*a1,0.*a1,0.*a1,11970.*a1,0.*a1,0.*a1,5985.*a1,-5985.*a1,
		 2520.*a1,160.*a1,190.*a1,0.*a1,0.*a1,-4788.*a1,-1197.*a1,4788.*a1,1197.*a1,-2660.*a1,-1330.*a1,0.*a1,0.*a1,0.*a1,-11970.*a1,0.*a1,0.*a1,-5985.*a1,-5985.*a1,
		 2520.*a1,160.*a1,190.*a1,0.*a1,0.*a1,4788.*a1,1197.*a1,-4788.*a1,-1197.*a1,-2660.*a1,-1330.*a1,0.*a1,0.*a1,0.*a1,-11970.*a1,0.*a1,0.*a1,5985.*a1,5985.*a1,
		 2520.*a1,160.*a1,190.*a1,0.*a1,0.*a1,-4788.*a1,-1197.*a1,-4788.*a1,-1197.*a1,-2660.*a1,-1330.*a1,0.*a1,0.*a1,0.*a1,11970.*a1,0.*a1,0.*a1,-5985.*a1,5985.*a1};

  //this is M
  FLOAT_TYPE temp[361] =
   {1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
	  -30., -11., -11., -11., -11., -11., -11., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,
	   12., -4., -4., -4., -4., -4., -4., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
	   0., 1., -1., 0., 0., 0., 0., 1., -1., 1., -1., 1., -1., 1., -1., 0., 0., 0., 0.,
	   0., -4., 4., 0., 0., 0., 0., 1., -1., 1., -1., 1., -1., 1., -1., 0., 0., 0., 0.,
	   0., 0., 0., 1., -1., 0., 0., 1., 1., -1., -1., 0., 0., 0., 0., 1., -1., 1., -1.,
	   0., 0., 0., -4., 4., 0., 0., 1., 1., -1., -1., 0., 0., 0., 0., 1., -1., 1., -1.,
	   0., 0., 0., 0., 0., 1., -1., 0., 0., 0., 0., 1., 1., -1., -1., 1., 1., -1., -1.,
	   0., 0., 0., 0., 0., -4., 4., 0., 0., 0., 0., 1., 1., -1., -1., 1., 1., -1., -1.,
	   0., 2., 2., -1., -1., -1., -1., 1., 1., 1., 1., 1., 1., 1., 1., -2., -2., -2., -2.,
	   0., -4., -4., 2., 2., 2., 2., 1., 1., 1., 1., 1., 1., 1., 1., -2., -2., -2., -2.,
	   0., 0., 0., 1., 1., -1., -1., 1., 1., 1., 1., -1., -1., -1., -1., 0., 0., 0., 0.,
	   0., 0., 0., -2., -2., 2., 2., 1., 1., 1., 1., -1., -1., -1., -1., 0., 0., 0., 0.,
	   0., 0., 0., 0., 0., 0., 0., 1., -1., -1., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
	   0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., -1., -1., 1.,
	   0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., -1., -1., 1., 0., 0., 0., 0.,
	   0., 0., 0., 0., 0., 0., 0., 1., -1., 1., -1., -1., 1., -1., 1., 0., 0., 0., 0.,
	   0., 0., 0., 0., 0., 0., 0., -1., -1., 1., 1., 0., 0., 0., 0., 1., -1., 1., -1.,
	   0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., -1., -1., -1., -1., 1., 1.};

  for (i = 0; i < 361; i++)
  {
      velMomMap3D[i] = temp[i];
  }

  //This is diag(S)
   sm[ 0] =     0.0;
   sm[ 1] =    1.19;
   sm[ 2] =     1.4;
   sm[ 3] =     0.0;
   sm[ 4] =     1.2;
   sm[ 5] =     0.0;
   sm[ 6] =     1.2;
   sm[ 7] =     0.0;
   sm[ 8] =     1.2;
   sm[ 9] =   omega;
   sm[10] =     1.4;
   sm[11] =   omega;
   sm[12] =     1.4;
   sm[13] =   omega;
   sm[14] =   omega;
   sm[15] =   omega;
   sm[16] =    1.98;
   sm[17] =    1.98;
   sm[18] =    1.98;

//  for (i=0;i<19;i++) sm[i] = omega;



  for(i=0;i<19;i++)
  {
    for(j=0;j<19;j++)
    {
        momCollMtx3D[i*19+j]=tminv[i*19+j]*sm[j];
    }
  }

}
